version: '3'

services:
  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  courses:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      # test: ["CMD-SHELL", "-C", "pg_isready -U $POSTGRES_USER"]
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    # command: sh -c "python manage.py migrate && pithon manage.py runserver 0.0.0.0:8000"
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    depends_on:
      courses:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - courses
      - app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django    # celery -A config beat worker -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - courses
      - app
    env_file:
      - .env

volumes:
  pg_data:


#    ports:
#      - "5432:5432"
#    environment:
#      - .env
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      POSTGRES_HOST_AUTH_METHOD: trust

#  redis:
#    image: redis:6.0
#
#  web:
#    build: .
#    command: sh -c "python manage.py runserver 0.0.0.0:8000"
#    volumes:
#      - .:/app
#    ports:
#      - "8000:8000"
#    depends_on:
#      - db
#      - redis
#    environment:
#      - DATABASE=postgres
#      - SQL_HOST=db
#      - SQL_PORT=5432
#      - DB_NAME=${DB_NAME}
#      - DB_USER=${DB_USER}
#      - DB_PASSWORD=${DB_PASSWORD}
#      - REDIS_URL=redis://redis:6379/0
#
#  celery:
#    build: .
#    command: celery -A config worker --loglevel=info
#    volumes:
#      - .:/app
#    depends_on:
#      - db
#      - redis
#    environment:
#      - DATABASE=postgres
#      - SQL_HOST=db
#      - SQL_PORT=5432
#      - DB_NAME=${DB_NAME}
#      - DB_USER=${DB_USER}
#      - DB_PASSWORD=${DB_PASSWORD}
#      - REDIS_URL=redis://redis:6379/0
#
#  celery-beat:
#    build: .
#    command: celery -A config beat --loglevel=info
#    volumes:
#      - .:/app
#    depends_on:
#      - db
#      - redis
#    environment:
#      - DATABASE=postgres
#      - SQL_HOST=db
#      - SQL_PORT=5432
#      - DB_NAME=${DB_NAME}
#      - DB_USER=${DB_USER}
#      - DB_PASSWORD=${DB_PASSWORD}
#      - REDIS_URL=redis://redis:6379/0
#
#volumes:
#  postgres_data:
